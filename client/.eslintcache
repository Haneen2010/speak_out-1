[{"C:\\Users\\user\\Desktop\\speak_outt\\client\\src\\index.js":"1","C:\\Users\\user\\Desktop\\speak_outt\\client\\src\\serviceWorker.js":"2","C:\\Users\\user\\Desktop\\speak_outt\\client\\src\\App.js":"3","C:\\Users\\user\\Desktop\\speak_outt\\client\\src\\app\\store.js":"4","C:\\Users\\user\\Desktop\\speak_outt\\client\\src\\components\\doctors.js":"5","C:\\Users\\user\\Desktop\\speak_outt\\client\\src\\components\\articles.js":"6","C:\\Users\\user\\Desktop\\speak_outt\\client\\src\\components\\questions.js":"7","C:\\Users\\user\\Desktop\\speak_outt\\client\\src\\components\\navbar.js":"8","C:\\Users\\user\\Desktop\\speak_outt\\client\\src\\components\\home.js":"9","C:\\Users\\user\\Desktop\\speak_outt\\client\\src\\components\\login.js":"10","C:\\Users\\user\\Desktop\\speak_outt\\client\\src\\components\\SignUp.js":"11","C:\\Users\\user\\Desktop\\speak_outt\\client\\src\\reducers\\index.js":"12","C:\\Users\\user\\Desktop\\speak_outt\\client\\src\\reducers\\Adduser.js":"13","C:\\Users\\user\\Desktop\\speak_outt\\client\\src\\actions\\adduser.js":"14","C:\\Users\\user\\Desktop\\speak_outt\\client\\src\\api\\index.js":"15"},{"size":1004,"mtime":1608488683997,"results":"16","hashOfConfig":"17"},{"size":5141,"mtime":1608297786316,"results":"18","hashOfConfig":"17"},{"size":1364,"mtime":1608487296864,"results":"19","hashOfConfig":"17"},{"size":206,"mtime":1608297786301,"results":"20","hashOfConfig":"17"},{"size":164,"mtime":1608315621421,"results":"21","hashOfConfig":"17"},{"size":167,"mtime":1608315621421,"results":"22","hashOfConfig":"17"},{"size":170,"mtime":1608315677089,"results":"23","hashOfConfig":"17"},{"size":3310,"mtime":1608373358914,"results":"24","hashOfConfig":"17"},{"size":155,"mtime":1608315621421,"results":"25","hashOfConfig":"17"},{"size":158,"mtime":1608315621421,"results":"26","hashOfConfig":"17"},{"size":7970,"mtime":1608487864904,"results":"27","hashOfConfig":"17"},{"size":120,"mtime":1608479237686,"results":"28","hashOfConfig":"17"},{"size":195,"mtime":1608485715169,"results":"29","hashOfConfig":"17"},{"size":606,"mtime":1608486082364,"results":"30","hashOfConfig":"17"},{"size":198,"mtime":1608486279317,"results":"31","hashOfConfig":"17"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"i1q24q",{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"55","usedDeprecatedRules":"36"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"60","usedDeprecatedRules":"36"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"63","usedDeprecatedRules":"36"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},"C:\\Users\\user\\Desktop\\speak_outt\\client\\src\\index.js",[],"C:\\Users\\user\\Desktop\\speak_outt\\client\\src\\serviceWorker.js",[],["66","67"],"C:\\Users\\user\\Desktop\\speak_outt\\client\\src\\App.js",["68","69","70"],"C:\\Users\\user\\Desktop\\speak_outt\\client\\src\\app\\store.js",[],"C:\\Users\\user\\Desktop\\speak_outt\\client\\src\\components\\doctors.js",[],"C:\\Users\\user\\Desktop\\speak_outt\\client\\src\\components\\articles.js",[],"C:\\Users\\user\\Desktop\\speak_outt\\client\\src\\components\\questions.js",[],"C:\\Users\\user\\Desktop\\speak_outt\\client\\src\\components\\navbar.js",[],"C:\\Users\\user\\Desktop\\speak_outt\\client\\src\\components\\home.js",[],"C:\\Users\\user\\Desktop\\speak_outt\\client\\src\\components\\login.js",[],"C:\\Users\\user\\Desktop\\speak_outt\\client\\src\\components\\SignUp.js",["71","72","73","74","75","76"],"import axios from 'axios';\r\nimport React from 'react';\r\n\r\nimport { useEffect, useState } from \"react\";\r\n\r\nimport { Link, useLocation } from 'react-router-dom';\r\n//import { useDispatch, useSelector } from 'react-redux';\r\nimport { useDispatch}  from 'react-redux';\r\nimport user from '../reducers/Adduser';\r\nimport {Adduser} from '../actions/adduser' \r\n\r\n//import { userActions } from '../_actions';\r\n\r\nfunction Signup (){\r\n\r\n    const [user, setUser] = useState({\r\n        userName: '',\r\n        age: '',\r\n        gender: '',\r\n        email : '',\r\n        password: ''\r\n    });\r\n    \r\n    const [submitted, setSubmitted] = useState(false);\r\n    // const registering = useSelector(state => state.registration.registering);\r\n    const dispatch = useDispatch();\r\n\r\n        // useEffect(() => {\r\n        //         dispatch(userActions.logout());\r\n        //     }, []);\r\n        \r\n             function handleChange(e) {\r\n                const { name, value } = e.target;\r\n                // console.log(e.target)\r\n                setUser(user => ({ ...user, [name]: value }));\r\n              \r\n\r\n            }\r\n        \r\n            function handleSubmit(e) {\r\n              //  console.log('jjjjjjjjjjjjjjj' , user)\r\n                e.preventDefault();\r\n                dispatch(Adduser(user))\r\n               \r\n            }\r\n        \r\n\r\n    return (\r\n        <div className=\"col-lg-8 offset-lg-2\">\r\n             <h2>Register</h2>\r\n             <form name=\"form\" onSubmit = {handleSubmit}> \r\n                 <div className=\"form-group\">\r\n                     <label>Username</label>\r\n                    <input type=\"text\" name=\"userName\" value={user.userName} onChange={handleChange} className={'form-control' + (submitted && !user.userName ? ' is-invalid' : '')}  />\r\n                    {submitted && !user.userName &&\r\n                        <div className=\"invalid-feedback\">Username is required</div>\r\n                    }\r\n                </div>\r\n                <div className=\"form-group\">\r\n                    <label>age</label>\r\n                    <input type=\"text\" name=\"age\" value={user.age} onChange={handleChange}  className={'form-control' + (submitted && !user.age ? ' is-invalid' : '')}/>\r\n                    {submitted && !user.age &&\r\n                        <div className=\"invalid-feedback\">Age is required</div>\r\n                    }\r\n                </div>\r\n                <div className=\"form-group\">\r\n                    <label>gender</label>\r\n                    <input type=\"text\" name=\"gender\" value={user.gender} onChange={handleChange}  className={'form-control' + (submitted && !user.gender ? ' is-invalid' : '')}/>\r\n                    {submitted && !user.gender &&\r\n                            <div className=\"invalid-feedback\">gender is required</div>\r\n                    }\r\n                </div>\r\n                    <div className=\"form-group\">\r\n                        <label>Email</label>\r\n                        <input type=\"email\" name=\"email\" value={user.email} onChange={handleChange}  className={'form-control' + (submitted && !user.email ? ' is-invalid' : '')}/>\r\n                        {submitted && !user.email &&\r\n                             <div className=\"invalid-feedback\">Email is required</div>\r\n                       }\r\n                 </div>\r\n                <div className=\"form-group\">\r\n                    <label>Password</label>\r\n                    <input type=\"password\" name=\"password\" value={user.password} onChange={handleChange}  className={'form-control' + (submitted && !user.password ? ' is-invalid' : '')}/>\r\n                    {submitted && !user.password &&\r\n                        <div className=\"invalid-feedback\">Password is required</div>\r\n                    }\r\n                </div>\r\n\r\n                <div className=\"form-group\">\r\n                    <button className=\"btn btn-primary\" >\r\n                        {/* {registering && <span className=\"spinner-border spinner-border-sm mr-1\"></span>} */}\r\n                        Sign Up\r\n                    </button>\r\n                    {/* <Link to=\"/login\" className=\"btn btn-link\">Cancel</Link> */}\r\n                </div>\r\n            </form>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Signup;\r\n\r\n\r\n    /* const [submitted, setSubmitted] = useState(false);\r\n    const registering = useSelector(state => state.registration.registering);\r\n    const dispatch = useDispatch();\r\n\r\n     reset login status\r\n    useEffect(() => { */\r\n//         dispatch(userActions.logout());\r\n//     }, []);\r\n\r\n//     function handleChange(e) {\r\n//         const { name, value } = e.target;\r\n//         setUser(user => ({ ...user, [name]: value }));\r\n//     }\r\n\r\n//     function handleSubmit(e) {\r\n//         e.preventDefault();\r\n\r\n//         setSubmitted(true);\r\n//         if (user.firstName && user.age && user.username && user.password) {\r\n//             dispatch(userActions.register(user));\r\n//         }\r\n//     }\r\n\r\n//     return (\r\n//         <div className=\"col-lg-8 offset-lg-2\">\r\n//             <h2>Register</h2>\r\n//             <form name=\"form\" onSubmit={handleSubmit}>\r\n//                 <div className=\"form-group\">\r\n//                     <label>Username</label>\r\n//                     <input type=\"text\" name=\"Username\" value={user.Username} onChange={handleChange} className={'form-control' + (submitted && !user.Username ? ' is-invalid' : '')} />\r\n//                     {submitted && !user.Username &&\r\n//                         <div className=\"invalid-feedback\">Username is required</div>\r\n//                     }\r\n//                 </div>\r\n//                 <div className=\"form-group\">\r\n//                     <label>age</label>\r\n//                     <input type=\"text\" name=\"age\" value={user.age} onChange={handleChange} className={'form-control' + (submitted && !user.age ? ' is-invalid' : '')} />\r\n//                     {submitted && !user.age &&\r\n//                         <div className=\"invalid-feedback\">Age is required</div>\r\n//                     }\r\n//                 </div>\r\n//                 <div className=\"form-group\">\r\n//                     <label>gender</label>\r\n//                     <input type=\"text\" name=\"gender\" value={user.gender} onChange={handleChange} className={'form-control' + (submitted && !user.gender ? ' is-invalid' : '')} />\r\n//                     {submitted && !user.gender &&\r\n//                         <div className=\"invalid-feedback\">gender is required</div>\r\n//                     }\r\n//                 </div>\r\n//                     <div className=\"form-group\">\r\n//     //                     <label>Email</label>\r\n//     //                     <input type=\"text\" name=\"email\" value={user.email} onChange={handleChange} className={'form-control' + (submitted && !user.email ? ' is-invalid' : '')} />\r\n//     //                     {submitted && !user.email &&\r\n//     //                         <div className=\"invalid-feedback\">Email is required</div>\r\n//     //                    }\r\n// //                 </div>\r\n//                 <div className=\"form-group\">\r\n//                     <label>Password</label>\r\n//                     <input type=\"password\" name=\"password\" value={user.password} onChange={handleChange} className={'form-control' + (submitted && !user.password ? ' is-invalid' : '')} />\r\n//                     {submitted && !user.password &&\r\n//                         <div className=\"invalid-feedback\">Password is required</div>\r\n//                     }\r\n//                 </div>\r\n\r\n//                 <div className=\"form-group\">\r\n//                     <button className=\"btn btn-primary\">\r\n//                         {registering && <span className=\"spinner-border spinner-border-sm mr-1\"></span>}\r\n//                         Register\r\n//                     </button>\r\n//                     <Link to=\"/login\" className=\"btn btn-link\">Cancel</Link>\r\n//                 </div>\r\n//             </form>\r\n//         </div>\r\n//     );\r\n\r\n","C:\\Users\\user\\Desktop\\speak_outt\\client\\src\\reducers\\index.js",[],"C:\\Users\\user\\Desktop\\speak_outt\\client\\src\\reducers\\Adduser.js",["77"],"export default (Adduser = [], action)=> { \r\n\r\n    switch (action.type){\r\n       case 'Adduser':\r\n           return Adduser;\r\n\r\n       default:\r\n           return 0;\r\n    }\r\n}","C:\\Users\\user\\Desktop\\speak_outt\\client\\src\\actions\\adduser.js",["78"],"\r\nimport * as api from '../api/index.js'\r\n\r\nexport const Adduser = (user) => async (dispatch)=>{\r\n    try {\r\n        console.log('success')\r\n      const {data} = await api.Adduser(user);\r\n      dispatch({type :'Adduser' , payload: data})\r\n        \r\n    }\r\n    catch(error){\r\n        console.log('failed')\r\n        console.log(error)\r\n    }\r\n    const action = { type : ' '}\r\n}\r\n\r\n\r\n// const {data} = await axios\r\n// .post(\"http://localhost:5000/user/createUser\", user)\r\n// .then((response) => {\r\n//   console.log(response, \"You saved in db\");\r\n  \r\n// })\r\n// .catch((err) => alert(\"you didn't save in db\"));","C:\\Users\\user\\Desktop\\speak_outt\\client\\src\\api\\index.js",[],{"ruleId":"79","replacedBy":"80"},{"ruleId":"81","replacedBy":"82"},{"ruleId":"83","severity":1,"message":"84","line":1,"column":17,"nodeType":"85","messageId":"86","endLine":1,"endColumn":26},{"ruleId":"83","severity":1,"message":"87","line":15,"column":10,"nodeType":"85","messageId":"86","endLine":15,"endColumn":21},{"ruleId":"83","severity":1,"message":"88","line":16,"column":9,"nodeType":"85","messageId":"86","endLine":16,"endColumn":16},{"ruleId":"83","severity":1,"message":"89","line":1,"column":8,"nodeType":"85","messageId":"86","endLine":1,"endColumn":13},{"ruleId":"83","severity":1,"message":"84","line":4,"column":10,"nodeType":"85","messageId":"86","endLine":4,"endColumn":19},{"ruleId":"83","severity":1,"message":"90","line":6,"column":10,"nodeType":"85","messageId":"86","endLine":6,"endColumn":14},{"ruleId":"83","severity":1,"message":"91","line":6,"column":16,"nodeType":"85","messageId":"86","endLine":6,"endColumn":27},{"ruleId":"83","severity":1,"message":"92","line":9,"column":8,"nodeType":"85","messageId":"86","endLine":9,"endColumn":12},{"ruleId":"83","severity":1,"message":"93","line":24,"column":23,"nodeType":"85","messageId":"86","endLine":24,"endColumn":35},{"ruleId":"94","severity":1,"message":"95","line":1,"column":1,"nodeType":"96","endLine":10,"endColumn":2},{"ruleId":"83","severity":1,"message":"97","line":15,"column":11,"nodeType":"85","messageId":"86","endLine":15,"endColumn":17},"no-native-reassign",["98"],"no-negated-in-lhs",["99"],"no-unused-vars","'useEffect' is defined but never used.","Identifier","unusedVar","'useDispatch' is defined but never used.","'Adduser' is defined but never used.","'axios' is defined but never used.","'Link' is defined but never used.","'useLocation' is defined but never used.","'user' is defined but never used.","'setSubmitted' is assigned a value but never used.","import/no-anonymous-default-export","Assign arrow function to a variable before exporting as module default","ExportDefaultDeclaration","'action' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]